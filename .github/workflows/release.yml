name: Build and Release

on:
  push:
    tags:
      - v0.2-beta  # Match tags like v0.2-beta, v1.0, etc.

jobs:
  build-and-release:
    name: Build and Release for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.9]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        pip install pyinstaller

    - name: Build binary with PyInstaller
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
            pyinstaller --onefile --icon=assets/icons/myicon.ico melaninclick_windows.py
        elif [[ "${{ runner.os }}" == "macOS" ]]; then
            pyinstaller --onefile --icon=assets/icons/myicon.icns melaninclick_macos.py
        else
            pyinstaller --onefile --icon=assets/icons/myicon.png melaninclick_linux.py  
        fi
      # After this step, you'll have your output ready.

    - name: Install GitHub CLI
      run: |
        sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
        sudo apt-add-repository https://cli.github.com/packages
        sudo apt update
        sudo apt install gh

    - name: Authenticate with GitHub CLI
      run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

    - name: Create Release
      id: create_release
      run: |
        gh release create ${{ github.ref }} \
          --title "MelaninClick ${{ github.ref }}" \
          --notes "Release notes for ${{ github.ref }}" \
          --draft=false \
          --prerelease=true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./dist/your_script${{ runner.os == 'Windows' && '.exe' || (runner.os == 'macOS' && '.app') || (runner.os == 'Linux' && '.AppImage') }}
        asset_name: melaninclick-${{ github.ref }}-${{ runner.os == 'Windows' && '.exe' || (runner.os == 'macOS' && '.app') || (runner.os == 'Linux' && '.AppImage') }}
        # The resulting name will be something like `melaninclick-v0.2-beta-Linux.AppImage`
        asset_content_type: application/octet-stream
