name: Build and Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            architecture: amd64
          - os: ubuntu-latest
            architecture: arm64
          - os: windows-latest
            architecture: amd64
          - os: macos-latest
            architecture: x86_64
          - os: macos-latest
            architecture: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    - name: Install Dependencies (Linux only)
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install appstream

    - name: Install PyInstaller
      run: |
        pip install pyinstaller

    # Linux x86_64
    - name: Build binary with PyInstaller for Linux x86_64
      if: matrix.os == 'ubuntu-latest' && matrix.architecture == 'amd64'
      run: |
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
        chmod +x appimagetool-x86_64.AppImage
        pyinstaller --onefile --icon=assets/icons/myicon.png melaninclick_linux.py
        ./appimagetool-x86_64.AppImage --appimage-extract
        ./squashfs-root/AppRun dist/melaninclick_linux
        mv dist/melaninclick_linux.AppImage dist/melaninclick-linux-x86_64.AppImage

    # Linux ARM64
    - name: Build binary with PyInstaller for Linux ARM64
      if: matrix.os == 'ubuntu-latest' && matrix.architecture == 'arm64'
      run: |
        wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-aarch64.AppImage
        chmod +x appimagetool-aarch64.AppImage
        pyinstaller --onefile --icon=assets/icons/myicon.png melaninclick_linux.py
        ./appimagetool-aarch64.AppImage --appimage-extract
        ./squashfs-root/AppRun dist/melaninclick_linux
        mv dist/melaninclick_linux.AppImage dist/melaninclick-linux-arm64.AppImage

    # macOS x86_64
    - name: Build binary with PyInstaller for macOS x86_64
      if: matrix.os == 'macos-latest' && matrix.architecture == 'x86_64'
      run: |
        pyinstaller --onefile --icon=assets/icons/myicon.icns melaninclick_macos.py
        hdiutil create dist/melaninclick.dmg -volname "MelaninClick" -srcfolder dist/melaninclick_macos

    # macOS ARM64
    - name: Build binary with PyInstaller for macOS ARM64
      if: matrix.os == 'macos-latest' && matrix.architecture == 'arm64'
      run: |
        pyinstaller --onefile --icon=assets/icons/myicon.icns melaninclick_macos.py
        hdiutil create dist/melaninclick-arm64.dmg -volname "MelaninClick" -srcfolder dist/melaninclick_macos

    # Windows x86_64
    - name: Build binary with PyInstaller for Windows x86_64
      if: matrix.os == 'windows-latest' && matrix.architecture == 'amd64'
      run: |
        pyinstaller --onefile --icon=assets/icons/myicon.ico melaninclick_windows.py
        mv dist/melaninclick_windows.exe dist/melaninclick-windows-x86_64.exe

    # Create GitHub Release
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: |
          dist/melaninclick-linux-x86_64.AppImage
          dist/melaninclick-linux-arm64.AppImage
          dist/melaninclick.dmg
          dist/melaninclick-arm64.dmg
          dist/melaninclick-windows-x86_64.exe
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
